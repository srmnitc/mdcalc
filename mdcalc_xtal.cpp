
#include "mdcalc_header.h"
#include <iostream>
#include <vector>
#include <stdlib.h>
#include <string>
#include <sstream>
#include <cmath>
#include <fstream>
#include <iomanip>


using namespace std;

//make crystal structure
void MD::make_xtal(){

	if (tokens[0]=="cohesiveeng")
    {
        if(tokens[1]=="bcc")
        {   xtalf_rname = "gen.bcc.atoms";
            xtalf_wname = "generic.bcc.atoms";
            mockxtal = "BCC";

            enx = 1; eny = 1; enz = 1;
            no_atoms = 2*enx*eny*enz;
            cord_no = 2;

            xfact = 1;
            yfact = 1;
            zfact = 1;

            unitcellX[1]=0;
            unitcellY[1]=0;
            unitcellZ[1]=0;

            unitcellX[2]=0.5*d_alat;
            unitcellY[2]=0.5*d_alat;
            unitcellZ[2]=0.5*d_alat;

            pre_make_xtal(0);
        }

        if(tokens[1]=="fcc")
        {   xtalf_rname = "gen.fcc.atoms";
            xtalf_wname = "generic.fcc.atoms";
            mockxtal = "FCC";

            enx = 1; eny = 1; enz = 1;
            no_atoms = 4*enx*eny*enz;
            cord_no = 4;

            xfact = 1;
            yfact = 1;
            zfact = 1;

            unitcellX[1]=0;
            unitcellY[1]=0;
            unitcellZ[1]=0;

            unitcellX[2]=0.5*d_alat;
            unitcellY[2]=0;
            unitcellZ[2]=0.5*d_alat;

            unitcellX[3]=0;
            unitcellY[3]=0.5*d_alat;
            unitcellZ[3]=0.5*d_alat;

            unitcellX[4]=0.5*d_alat;
            unitcellY[4]=0.5*d_alat;
            unitcellZ[4]=0;

            pre_make_xtal(0);
        }


        if(tokens[1]=="hcp")
        {   xtalf_rname = "gen.hcp.atoms";
            xtalf_wname = "generic.hcp.atoms";
            mockxtal = "HCP";

            enx = 1; eny = 1; enz = 1;
            no_atoms = 4*enx*eny*enz;
            cord_no = 4;

            xfact = 1;
            yfact = sqrt(3);
            zfact = 1.633;

            unitcellX[1]=0;
            unitcellY[1]=0;
            unitcellZ[1]=0;

            unitcellX[2]=0.5*d_alat;
            unitcellY[2]=0.5*d_alat*sqrt(3);
            unitcellZ[2]=0;

            unitcellX[3]=0.5*d_alat;
            unitcellY[3]=sqrt(3)*d_alat/6;
            unitcellZ[3]=0.5*zfact*d_alat;

            unitcellX[4]=0;
            unitcellY[4]=2*d_alat/sqrt(3);
            unitcellZ[4]=0.5*zfact*d_alat;

            pre_make_xtal(0);
        }
    }
}


void MD::pre_make_xtal(int a)
{   //make crystal structure based on alat
    //defining the necessary vectors
    vector <double> posx,posy,posz,num1,num2;
    int i,j,k,l,m=0,co=1;
    

    //write to a file
    ofstream xtal2(xtalf_wname.c_str());

    xtal2<<"# Atoms generated by XtalGen Â©";
    xtal2<<endl<<endl<<no_atoms<<" "<<"atoms"<<endl<<endl;
    xtal2<<"1 atom types"<<endl<<endl;

    xtal2<<"0    "<<enx*d_alat*xfact<<"    xlo xhi"<<endl;
    xtal2<<"0    "<<eny*d_alat*yfact<<"    ylo yhi"<<endl;
    xtal2<<"0    "<<enz*d_alat*zfact<<"    zlo zhi"<<endl;

    if(a==1)
    {
        xtal2<<"0.0 0.0 0.0 xy xz yz"<<endl;
    }

    xtal2<<endl<<"Atoms"<<endl<<endl;

    for(i=1;i<=enx;i++)
    {
        for(j=1;j<=eny;j++)
        {
             for(k=1;k<=enz;k++)
             {
                  for(l=1;l<=cord_no;l++)
                  {
                        m++;
                        xtal2<<fixed<<setprecision(5)<<co<<" 1 "<<(unitcellX[l]+(d_alat*xfact*((double)i-1)))<<" ";
                        xtal2<<fixed<<setprecision(5)<<(unitcellY[l]+(d_alat*yfact*((double)j-1)))<<" ";
                        xtal2<<fixed<<setprecision(5)<<(unitcellZ[l]+(d_alat*zfact*((double)k-1)))<<endl;
                        co++;
                    }
                }
            }
        }

    xtal2.close();

    //copying the file to required folder
    ofstream xtal3("cpatoms.sh");

    xtal3<<"cd "<<mockxtal.c_str()<<"/"<<endl;
    xtal3<<"rm "<<xtalf_wname.c_str()<<endl;
    xtal3<<"cd ../"<<endl;
    xtal3<<"cp "<<xtalf_wname.c_str()<<" "<<mockxtal.c_str()<<"/"<<endl;

    xtal3.close();

    //make it runnable and running
    system("./cpatoms1.sh");

}
